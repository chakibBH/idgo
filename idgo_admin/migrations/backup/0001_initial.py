# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-07-12 13:56
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '0004_auto_20170706_0926'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='Libellé')),
                ('code', models.IntegerField(choices=[('O', 'Tous les utilisateurs'), ('1', 'Utilisateurs authentifiés'), ('2', 'Utilisateurs authentifiés avec droits spécifiques')], verbose_name='Niveau')),
            ],
            options={
                'managed': False,
                'verbose_name_plural': "Conditions d'accès",
                'verbose_name': "Condition d'accès",
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.CharField(max_length=1024, verbose_name='Description')),
                ('ckan_slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Ckan_ID')),
                ('sync_in_ckan', models.BooleanField(default=False, verbose_name='Synchro CKAN')),
            ],
            options={
                'managed': False,
                'verbose_name': 'Catégorie',
            },
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, verbose_name='Code INSEE')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=2154, verbose_name='Geometrie')),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_id', models.CharField(max_length=30, verbose_name='id')),
                ('domain_content', models.BooleanField(default=False)),
                ('domain_data', models.BooleanField(default=False)),
                ('domain_software', models.BooleanField(default=False)),
                ('status', models.CharField(default='active', max_length=30, verbose_name='Statut')),
                ('maintainer', models.CharField(blank=True, max_length=50, verbose_name='Maintainer')),
                ('od_conformance', models.CharField(blank=True, default='approved', max_length=30, verbose_name='od_conformance')),
                ('osd_conformance', models.CharField(blank=True, default='not reviewed', max_length=30, verbose_name='osd_conformance')),
                ('title', models.CharField(max_length=100, verbose_name='Nom')),
                ('url', models.URLField(blank=True, verbose_name='url')),
            ],
            options={
                'managed': False,
                'verbose_name': 'Licence',
            },
        ),
        migrations.CreateModel(
            name='Projection',
            fields=[
                ('name', models.CharField(max_length=50, verbose_name='Nom')),
                ('code', models.IntegerField(primary_key=True, serialize=False, verbose_name='Code EPSG')),
            ],
            options={
                'managed': False,
                'verbose_name': 'Projection',
            },
        ),
        migrations.CreateModel(
            name='Resolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50, verbose_name='Valeur')),
            ],
            options={
                'managed': False,
                'verbose_name': 'Resolution',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Nom')),
                ('description', models.TextField(verbose_name='Description')),
                ('url', models.URLField(blank=True, verbose_name='URL distante')),
                ('rfile', models.FileField(blank=True, upload_to='', verbose_name='Fichier à télécharger')),
                ('lang', models.CharField(choices=[('french', 'Français'), ('english', 'Anglais'), ('italian', 'Italien'), ('german', 'Allemand'), ('other', 'Autre')], default='french', max_length=10, verbose_name='Langue')),
                ('format', models.CharField(blank=True, max_length=20, verbose_name='Format')),
                ('bbox', django.contrib.gis.db.models.fields.PolygonField(blank=True, srid=4326, verbose_name='BBOX')),
                ('geo_restriction', models.BooleanField(default=False, verbose_name='Restriction géographique')),
                ('created_on', models.DateField(auto_now_add=True, verbose_name='Date de creation de la resource')),
                ('last_update', models.DateField(auto_now=True, verbose_name='Date de dernière modification de la resource')),
                ('type', models.CharField(choices=[('data', 'Données'), ('resource', 'Resources')], max_length=10, verbose_name='type de resources')),
                ('fichier', models.FileField(blank=True, default=None, null=True, upload_to='')),
            ],
            options={
                'managed': False,
                'verbose_name': 'Ressource',
            },
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='Code INSEE')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=2154, verbose_name='Geometrie')),
            ],
            options={
                'managed': False,
                'verbose_name': 'Territoire',
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Description')),
                ('ckan_slug', models.SlugField(blank=True, max_length=100, null=True, unique=True, verbose_name='Ckan_ID')),
                ('ckan_id', models.UUIDField(blank=True, db_index=True, null=True, unique=True, verbose_name='Ckan UUID')),
                ('sync_in_ckan', models.BooleanField(default=False, verbose_name='Synchro CKAN')),
                ('url_inspire', models.URLField(blank=True, null=True, verbose_name='URL Inspire')),
                ('is_inspire', models.BooleanField(default=False, verbose_name="L'URL Inspire est valide")),
                ('geocover', models.CharField(blank=True, choices=[('regionale', 'Régionale'), ('international', 'Internationale'), ('european', 'Européenne'), ('national', 'Nationale'), ('departementale', 'Départementale'), ('intercommunal', 'Inter-Communale'), ('communal', 'Communale')], default='regionale', max_length=30, null=True, verbose_name='Couverture géographique')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création du jeu de donnée')),
                ('date_publication', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de publication du jeu de donnée')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification du jeu de donnée')),
                ('update_freq', models.CharField(choices=[('never', 'Jamais'), ('annualy', 'Annuelle'), ('monthly', 'Mensuelle'), ('weekly', 'Hebdomadaire'), ('daily', 'Quotidienne'), ('continue', 'Continue'), ('realtime', 'Temps réel')], default='never', max_length=30, verbose_name='Fréquence de mise à jour')),
                ('owner_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email du producteur de la donnée')),
                ('published', models.BooleanField(default=False, verbose_name='Etat du jeu de donnée')),
                ('categories', models.ManyToManyField(to='idgo_admin.Category', verbose_name="Catégories d'appartenance")),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('keywords', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('licences', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='idgo_admin.License', verbose_name="Licence d'utilisation")),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profiles.Organisation', verbose_name="Organisme d'appartenance")),
            ],
            options={
                'verbose_name_plural': 'Jeux de données',
                'verbose_name': 'Jeu de données',
            },
        ),
    ]
